{"version":3,"file":"static/js/212.c15565d0.chunk.js","mappings":"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","sources":["DeviceChecker.js","Stats.js","../node_modules/three-stdlib/libs/MeshoptDecoder.js","../node_modules/three-stdlib/loaders/DRACOLoader.js","../node_modules/@react-three/drei/core/useGLTF.js","models/Robot.js","../node_modules/@react-three/drei/core/useAnimations.js","scenes/scene3/CameraController.js","scenes/scene3/Scene3D.js","scenes/scene3/AR.js","scenes/scene3/App.js"],"sourcesContent":["export const isMobile = (width=768) => (\r\n  window.innerWidth < width ? true : false\r\n);\r\n\r\nexport const getMostSideLength = () => (\r\n  window.innerWidth > window.innerHeight ? window.innerWidth : window.innerHeight \r\n);","import Stats from 'stats.js';\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\n\r\nexport class CustomStats extends Stats {\r\n  \r\n  static isStats = true;\r\n  static count = 0;\r\n\r\n  constructor(title = \"\", num = 0) {\r\n    super();\r\n    this.#clearDom();\r\n    if (CustomStats.isStats) {\r\n      this.showPanel(num); // 0: fps, 1: ms, 2: mb, 3+: custom\r\n      this.dom.style.left = CustomStats.count * 82 + \"px\";\r\n      this.dom.classList.add(\"stats\");\r\n      this.#addTitle(title);\r\n      CustomStats.count++;\r\n      console.log(CustomStats.count);\r\n      document.body.appendChild(this.dom);\r\n    }\r\n  }\r\n\r\n  #addTitle(title) {\r\n    var elem = document.createElement(\"p\");\r\n    elem.innerHTML = title;\r\n    this.dom.append(elem);\r\n  }\r\n\r\n  #clearDom() {\r\n    if (CustomStats.count == 0 || !CustomStats.isStats) {\r\n      const statsElems = document.getElementsByClassName(\"stats\");\r\n      while (statsElems.length > 0) {\r\n        statsElems[0].remove();\r\n      }\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport const useStats = (num = 0, isEnabled = true) => {\r\n  if (isEnabled) {\r\n    const stats = useMemo(() => new Stats(), []);\r\n    useEffect(() => {\r\n      stats.showPanel(num);\r\n      stats.dom.style.left = \"auto\";\r\n      stats.dom.style.right = 0;\r\n      document.body.appendChild(stats.dom);\r\n    });\r\n\r\n    useFrame(() => {\r\n      stats.begin();\r\n      stats.end();\r\n    });\r\n  }\r\n};","// This file is part of meshoptimizer library and is distributed under the terms of MIT License.\n// Copyright (C) 2016-2020, by Arseny Kapoulkine (arseny.kapoulkine@gmail.com)\nlet generated;\n\nconst MeshoptDecoder = () => {\n  if (generated) return generated; // Built with clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)\n  // Built from meshoptimizer 0.14\n\n  const wasm_base = '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';\n  const wasm_simd = ''; // Uses bulk-memory and simd extensions\n\n  const detector = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 3, 2, 0, 0, 5, 3, 1, 0, 1, 12, 1, 0, 10, 22, 2, 12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11, 7, 0, 65, 0, 253, 15, 26, 11]); // Used to unpack wasm\n\n  const wasmpack = new Uint8Array([32, 0, 65, 253, 3, 1, 2, 34, 4, 106, 6, 5, 11, 8, 7, 20, 13, 33, 12, 16, 128, 9, 116, 64, 19, 113, 127, 15, 10, 21, 22, 14, 255, 66, 24, 54, 136, 107, 18, 23, 192, 26, 114, 118, 132, 17, 77, 101, 130, 144, 27, 87, 131, 44, 45, 74, 156, 154, 70, 167]);\n\n  if (typeof WebAssembly !== 'object') {\n    // This module requires WebAssembly to function\n    return {\n      supported: false\n    };\n  }\n\n  let wasm = wasm_base;\n\n  if (WebAssembly.validate(detector)) {\n    wasm = wasm_simd;\n  }\n\n  let instance;\n  const promise = WebAssembly.instantiate(unpack(wasm), {}).then(result => {\n    instance = result.instance;\n\n    instance.exports.__wasm_call_ctors();\n  });\n\n  function unpack(data) {\n    const result = new Uint8Array(data.length);\n\n    for (let i = 0; i < data.length; ++i) {\n      const ch = data.charCodeAt(i);\n      result[i] = ch > 96 ? ch - 71 : ch > 64 ? ch - 65 : ch > 47 ? ch + 4 : ch > 46 ? 63 : 62;\n    }\n\n    let write = 0;\n\n    for (let i = 0; i < data.length; ++i) {\n      result[write++] = result[i] < 60 ? wasmpack[result[i]] : (result[i] - 60) * 64 + result[++i];\n    }\n\n    return result.buffer.slice(0, write);\n  }\n\n  function decode(fun, target, count, size, source, filter) {\n    const sbrk = instance.exports.sbrk;\n    const count4 = count + 3 & ~3; // pad for SIMD filter\n\n    const tp = sbrk(count4 * size);\n    const sp = sbrk(source.length);\n    const heap = new Uint8Array(instance.exports.memory.buffer);\n    heap.set(source, sp);\n    const res = fun(tp, count, size, sp, source.length);\n\n    if (res === 0 && filter) {\n      filter(tp, count4, size);\n    }\n\n    target.set(heap.subarray(tp, tp + count * size));\n    sbrk(tp - sbrk(0));\n\n    if (res !== 0) {\n      throw new Error(`Malformed buffer data: ${res}`);\n    }\n  }\n\n  const filters = {\n    // legacy index-based enums for glTF\n    0: '',\n    1: 'meshopt_decodeFilterOct',\n    2: 'meshopt_decodeFilterQuat',\n    3: 'meshopt_decodeFilterExp',\n    // string-based enums for glTF\n    NONE: '',\n    OCTAHEDRAL: 'meshopt_decodeFilterOct',\n    QUATERNION: 'meshopt_decodeFilterQuat',\n    EXPONENTIAL: 'meshopt_decodeFilterExp'\n  };\n  const decoders = {\n    // legacy index-based enums for glTF\n    0: 'meshopt_decodeVertexBuffer',\n    1: 'meshopt_decodeIndexBuffer',\n    2: 'meshopt_decodeIndexSequence',\n    // string-based enums for glTF\n    ATTRIBUTES: 'meshopt_decodeVertexBuffer',\n    TRIANGLES: 'meshopt_decodeIndexBuffer',\n    INDICES: 'meshopt_decodeIndexSequence'\n  };\n  generated = {\n    ready: promise,\n    supported: true,\n\n    decodeVertexBuffer(target, count, size, source, filter) {\n      decode(instance.exports.meshopt_decodeVertexBuffer, target, count, size, source, instance.exports[filters[filter]]);\n    },\n\n    decodeIndexBuffer(target, count, size, source) {\n      decode(instance.exports.meshopt_decodeIndexBuffer, target, count, size, source);\n    },\n\n    decodeIndexSequence(target, count, size, source) {\n      decode(instance.exports.meshopt_decodeIndexSequence, target, count, size, source);\n    },\n\n    decodeGltfBuffer(target, count, size, source, mode, filter) {\n      decode(instance.exports[decoders[mode]], target, count, size, source, instance.exports[filters[filter]]);\n    }\n\n  };\n  return generated;\n};\n\nexport { MeshoptDecoder };\n","import { Loader, FileLoader, BufferGeometry, BufferAttribute } from 'three';\n\nconst _taskCache = new WeakMap();\n\nclass DRACOLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.decoderPath = '';\n    this.decoderConfig = {};\n    this.decoderBinary = null;\n    this.decoderPending = null;\n    this.workerLimit = 4;\n    this.workerPool = [];\n    this.workerNextTaskID = 1;\n    this.workerSourceURL = '';\n    this.defaultAttributeIDs = {\n      position: 'POSITION',\n      normal: 'NORMAL',\n      color: 'COLOR',\n      uv: 'TEX_COORD'\n    };\n    this.defaultAttributeTypes = {\n      position: 'Float32Array',\n      normal: 'Float32Array',\n      color: 'Float32Array',\n      uv: 'Float32Array'\n    };\n  }\n\n  setDecoderPath(path) {\n    this.decoderPath = path;\n    return this;\n  }\n\n  setDecoderConfig(config) {\n    this.decoderConfig = config;\n    return this;\n  }\n\n  setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, buffer => {\n      const taskConfig = {\n        attributeIDs: this.defaultAttributeIDs,\n        attributeTypes: this.defaultAttributeTypes,\n        useUniqueIDs: false\n      };\n      this.decodeGeometry(buffer, taskConfig).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  }\n  /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n\n\n  decodeDracoFile(buffer, callback, attributeIDs, attributeTypes) {\n    const taskConfig = {\n      attributeIDs: attributeIDs || this.defaultAttributeIDs,\n      attributeTypes: attributeTypes || this.defaultAttributeTypes,\n      useUniqueIDs: !!attributeIDs\n    };\n    this.decodeGeometry(buffer, taskConfig).then(callback);\n  }\n\n  decodeGeometry(buffer, taskConfig) {\n    // TODO: For backward-compatibility, support 'attributeTypes' objects containing\n    // references (rather than names) to typed array constructors. These must be\n    // serialized before sending them to the worker.\n    for (const attribute in taskConfig.attributeTypes) {\n      const type = taskConfig.attributeTypes[attribute];\n\n      if (type.BYTES_PER_ELEMENT !== undefined) {\n        taskConfig.attributeTypes[attribute] = type.name;\n      }\n    } //\n\n\n    const taskKey = JSON.stringify(taskConfig); // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n    // again from this thread.\n\n    if (_taskCache.has(buffer)) {\n      const cachedTask = _taskCache.get(buffer);\n\n      if (cachedTask.key === taskKey) {\n        return cachedTask.promise;\n      } else if (buffer.byteLength === 0) {\n        // Technically, it would be possible to wait for the previous task to complete,\n        // transfer the buffer back, and decode again with the second configuration. That\n        // is complex, and I don't know of any reason to decode a Draco buffer twice in\n        // different ways, so this is left unimplemented.\n        throw new Error('THREE.DRACOLoader: Unable to re-decode a buffer with different ' + 'settings. Buffer has already been transferred.');\n      }\n    } //\n\n\n    let worker;\n    const taskID = this.workerNextTaskID++;\n    const taskCost = buffer.byteLength; // Obtain a worker and assign a task, and construct a geometry instance\n    // when the task completes.\n\n    const geometryPending = this._getWorker(taskID, taskCost).then(_worker => {\n      worker = _worker;\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          taskConfig,\n          buffer\n        }, [buffer]); // this.debug();\n      });\n    }).then(message => this._createGeometry(message.geometry)); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n    geometryPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID); // this.debug();\n\n      }\n    }); // Cache the task result.\n\n    _taskCache.set(buffer, {\n      key: taskKey,\n      promise: geometryPending\n    });\n\n    return geometryPending;\n  }\n\n  _createGeometry(geometryData) {\n    const geometry = new BufferGeometry();\n\n    if (geometryData.index) {\n      geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n    }\n\n    for (let i = 0; i < geometryData.attributes.length; i++) {\n      const attribute = geometryData.attributes[i];\n      const name = attribute.name;\n      const array = attribute.array;\n      const itemSize = attribute.itemSize;\n      geometry.setAttribute(name, new BufferAttribute(array, itemSize));\n    }\n\n    return geometry;\n  }\n\n  _loadLibrary(url, responseType) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.decoderPath);\n    loader.setResponseType(responseType);\n    loader.setWithCredentials(this.withCredentials);\n    return new Promise((resolve, reject) => {\n      loader.load(url, resolve, undefined, reject);\n    });\n  }\n\n  preload() {\n    this._initDecoder();\n\n    return this;\n  }\n\n  _initDecoder() {\n    if (this.decoderPending) return this.decoderPending;\n    const useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n    const librariesPending = [];\n\n    if (useJS) {\n      librariesPending.push(this._loadLibrary('draco_decoder.js', 'text'));\n    } else {\n      librariesPending.push(this._loadLibrary('draco_wasm_wrapper.js', 'text'));\n      librariesPending.push(this._loadLibrary('draco_decoder.wasm', 'arraybuffer'));\n    }\n\n    this.decoderPending = Promise.all(librariesPending).then(libraries => {\n      const jsContent = libraries[0];\n\n      if (!useJS) {\n        this.decoderConfig.wasmBinary = libraries[1];\n      }\n\n      const fn = DRACOWorker.toString();\n      const body = ['/* draco decoder */', jsContent, '', '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n      this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n    });\n    return this.decoderPending;\n  }\n\n  _getWorker(taskID, taskCost) {\n    return this._initDecoder().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        const worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          decoderConfig: this.decoderConfig\n        });\n\n        worker.onmessage = function (e) {\n          const message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      const worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskCosts[taskID] = taskCost;\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  }\n\n  _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  }\n\n  debug() {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  }\n\n  dispose() {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n\n}\n/* WEB WORKER */\n\n\nfunction DRACOWorker() {\n  let decoderConfig;\n  let decoderPending;\n\n  onmessage = function (e) {\n    const message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function (resolve\n        /*, reject*/\n        ) {\n          decoderConfig.onModuleLoaded = function (draco) {\n            // Module is Promise-like. Wrap before resolving to avoid loop.\n            resolve({\n              draco: draco\n            });\n          };\n\n          DracoDecoderModule(decoderConfig); // eslint-disable-line no-undef\n        });\n        break;\n\n      case 'decode':\n        const buffer = message.buffer;\n        const taskConfig = message.taskConfig;\n        decoderPending.then(module => {\n          const draco = module.draco;\n          const decoder = new draco.Decoder();\n          const decoderBuffer = new draco.DecoderBuffer();\n          decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n\n          try {\n            const geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n            const buffers = geometry.attributes.map(attr => attr.array.buffer);\n            if (geometry.index) buffers.push(geometry.index.array.buffer);\n            self.postMessage({\n              type: 'decode',\n              id: message.id,\n              geometry\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: 'error',\n              id: message.id,\n              error: error.message\n            });\n          } finally {\n            draco.destroy(decoderBuffer);\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n\n  function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n    const attributeIDs = taskConfig.attributeIDs;\n    const attributeTypes = taskConfig.attributeTypes;\n    let dracoGeometry;\n    let decodingStatus;\n    const geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n    } else {\n      throw new Error('THREE.DRACOLoader: Unexpected geometry type.');\n    }\n\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error('THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg());\n    }\n\n    const geometry = {\n      index: null,\n      attributes: []\n    }; // Gather all vertex attributes.\n\n    for (const attributeName in attributeIDs) {\n      const attributeType = self[attributeTypes[attributeName]];\n      let attribute;\n      let attributeID; // A Draco file may be created with default vertex attributes, whose attribute IDs\n      // are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n      // a Draco file may contain a custom set of attributes, identified by known unique\n      // IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1) continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n\n      geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n    } // Add index.\n\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      geometry.index = decodeIndex(draco, decoder, dracoGeometry);\n    }\n\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n\n  function decodeIndex(draco, decoder, dracoGeometry) {\n    const numFaces = dracoGeometry.num_faces();\n    const numIndices = numFaces * 3;\n    const byteLength = numIndices * 4;\n\n    const ptr = draco._malloc(byteLength);\n\n    decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n    const index = new Uint32Array(draco.HEAPF32.buffer, ptr, numIndices).slice();\n\n    draco._free(ptr);\n\n    return {\n      array: index,\n      itemSize: 1\n    };\n  }\n\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    const numComponents = attribute.num_components();\n    const numPoints = dracoGeometry.num_points();\n    const numValues = numPoints * numComponents;\n    const byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n    const dataType = getDracoDataType(draco, attributeType);\n\n    const ptr = draco._malloc(byteLength);\n\n    decoder.GetAttributeDataArrayForAllPoints(dracoGeometry, attribute, dataType, byteLength, ptr);\n    const array = new attributeType(draco.HEAPF32.buffer, ptr, numValues).slice();\n\n    draco._free(ptr);\n\n    return {\n      name: attributeName,\n      array: array,\n      itemSize: numComponents\n    };\n  }\n\n  function getDracoDataType(draco, attributeType) {\n    switch (attributeType) {\n      case Float32Array:\n        return draco.DT_FLOAT32;\n\n      case Int8Array:\n        return draco.DT_INT8;\n\n      case Int16Array:\n        return draco.DT_INT16;\n\n      case Int32Array:\n        return draco.DT_INT32;\n\n      case Uint8Array:\n        return draco.DT_UINT8;\n\n      case Uint16Array:\n        return draco.DT_UINT16;\n\n      case Uint32Array:\n        return draco.DT_UINT32;\n    }\n  }\n}\n\nexport { DRACOLoader };\n","import { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\n// @ts-ignore\nlet dracoLoader = null;\n\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : 'https://www.gstatic.com/draco/versioned/decoders/1.4.3/');\n      loader.setDRACOLoader(dracoLoader);\n    }\n\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\n\nfunction useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n  return gltf;\n}\n\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\n\nexport { useGLTF };\n","import { useRef, useEffect, useState } from \"react\";\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\r\n\r\nconst modelPath = \"/robot.glb\";\r\n\r\nexport function Robot(props) {\r\n  const group = useRef();\r\n  const { nodes, materials, animations } = useGLTF(modelPath);\r\n  const { ref, actions, mixer } = useAnimations(animations, group);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const names = [\"Init\", \"Hello\", \"Salto\", \"Kiss\"];\r\n\r\n  const nextIndex = () => {\r\n    setIndex((index + 1) % names.length);\r\n  };\r\n\r\n  useFrame((state, delta) => {\r\n    mixer.update(delta);\r\n  });\r\n\r\n  useEffect(() => {\r\n    const anim = actions[names[index]].reset().fadeIn(0.5);\r\n\r\n    if (names[index] == \"Hello\") {\r\n      anim.setEffectiveTimeScale(2);\r\n    } else if (names[index] == \"Salto\") {\r\n      anim.setEffectiveTimeScale(2);\r\n    }\r\n    anim.play();\r\n\r\n    return () => actions[names[index]].fadeOut(0.5);\r\n  }, [index, actions, names]);\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group\r\n          name=\"Armature\"\r\n          rotation={[-Math.PI/5, Math.PI, 0]}\r\n        >\r\n          <primitive object={nodes.root006} />\r\n          <skinnedMesh\r\n            name=\"Heart\"\r\n            geometry={nodes.Heart.geometry}\r\n            material={materials.HeartMaterial}\r\n            skeleton={nodes.Heart.skeleton}\r\n          />\r\n          <skinnedMesh\r\n            name=\"body\"\r\n            geometry={nodes.body.geometry}\r\n            material={materials.BodyMaterial}\r\n            skeleton={nodes.body.skeleton}\r\n            onClick={nextIndex}\r\n          />\r\n          <skinnedMesh\r\n            name=\"head_1\"\r\n            geometry={nodes.head_1.geometry}\r\n            material={materials.HeadMaterial}\r\n            skeleton={nodes.head_1.skeleton}\r\n          >\r\n            <skinnedMesh\r\n              name=\"lefteye_1\"\r\n              geometry={nodes.lefteye_1.geometry}\r\n              material={materials[\"EyeMaterial.001\"]}\r\n              skeleton={nodes.lefteye_1.skeleton}\r\n            />\r\n            <skinnedMesh\r\n              name=\"mouth\"\r\n              geometry={nodes.mouth.geometry}\r\n              material={materials.MouthMaterial}\r\n              skeleton={nodes.mouth.skeleton}\r\n            />\r\n            <skinnedMesh\r\n              name=\"righteye_1\"\r\n              geometry={nodes.righteye_1.geometry}\r\n              material={materials.EyeMaterial}\r\n              skeleton={nodes.righteye_1.skeleton}\r\n            />\r\n          </skinnedMesh>\r\n        </group>\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(modelPath);","import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref); // eslint-disable-next-line prettier/prettier\n\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  const lazyActions = React.useRef({});\n  const [api] = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  });\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  React.useEffect(() => {\n    return () => {\n      mixer.stopAllAction();\n    };\n  }, [mixer]);\n  return api;\n}\n\nexport { useAnimations };\n","import { useMemo, useEffect } from 'react';\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nexport const CameraController = () => {\r\n  const { camera, gl } = useThree();\r\n  const controls = useMemo(() => new OrbitControls(camera, gl.domElement), [camera, gl]);\r\n  useEffect(\r\n    () => {\r\n      controls.minDistance = 10;\r\n      controls.maxDistance = 50;\r\n      controls.enablePan = false;\r\n      return () => {\r\n        controls.dispose();\r\n      };\r\n    },\r\n    [camera, gl]\r\n  );\r\n\r\n  useFrame((state) => {\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = .1;\r\n    controls.update();\r\n  });\r\n\r\n  return null;\r\n};","import { isMobile as isMob } from \"../../DeviceChecker\";\r\nimport { useStats } from \"../../Stats\";\r\n\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Preload, AdaptiveDpr } from \"@react-three/drei\";\r\n\r\nimport { Robot } from \"../../models/Robot\";\r\nimport { CameraController } from \"./CameraController\";\r\n\r\nconst isMobile = isMob();\r\n\r\nconst Stats = () => useStats(0, false);\r\n\r\nconst App = () => {\r\n  return (\r\n    <Canvas\r\n      className=\"app\"\r\n      camera={{\r\n        position: [0, 0, 20],\r\n        fov: 35,\r\n        near: 1,\r\n        far: 80\r\n      }}\r\n      gl={{\r\n        powerPreference: \"high-performance\",\r\n        alpha: true,\r\n        antialias: true,\r\n        stencil: false,\r\n        depth: true\r\n      }}\r\n    >\r\n      <Preload all />\r\n      <AdaptiveDpr pixelated />\r\n      <CameraController />\r\n      <Stats />\r\n      <ambientLight />\r\n      <directionalLight\r\n        intensity={2}\r\n        position={[0.75, 1, 0.5]}\r\n        color={0xffffff}\r\n      />\r\n      <directionalLight\r\n        intensity={2}\r\n        position={[-7.5, -10, -2]}\r\n        color={0xffffff}\r\n      />\r\n      <Robot\r\n        position={[0, -2, 0]}\r\n        rotation={[-180, 0, 0]}\r\n        scale={[0.1, 0.1, 0.1]}\r\n      />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default App;","import * as THREE from \"three\";\r\nimport { useState, useMemo, useRef, cloneElement } from 'react';\r\nimport { AdaptiveDpr } from '@react-three/drei';\r\nimport { XR, ARButton, Controllers, useHitTest, useXREvent, Interactive } from '@react-three/xr';\r\nimport { Canvas } from '@react-three/fiber';\r\n\r\nimport { Robot } from \"../../models/Robot\";\r\n\r\nconst limitObjects = 1;\r\nconst offset = {x: 0, y: 0.05, z: 0};\r\n\r\nconst Obj = () => (\r\n  <Robot\r\n    rotation={[90, 0, 0]}\r\n    scale={[0.0025, 0.0025, 0.0025]}\r\n  />\r\n);\r\n\r\nconst App = () => {\r\n  const [objects, setObjects] = useState([]);\r\n\r\n  const hitTestRef = useRef();\r\n  const geometryHitTest = useMemo(() => new THREE.TorusGeometry(0.062, 0.01, 2, 100), []);\r\n  const materialHitTest = useMemo(() => new THREE.MeshBasicMaterial({color: 0xFF88DD}), []);\r\n\r\n  const HitTest = () => {\r\n\r\n    useHitTest((hit) => {\r\n      hit.decompose(hitTestRef.current.position, hitTestRef.current.rotation, hitTestRef.current.scale);\r\n    });\r\n\r\n    return (\r\n      <>\r\n      <group ref={hitTestRef}>\r\n        <mesh\r\n          geometry={geometryHitTest}\r\n          material={materialHitTest}\r\n          rotation={[90, 0, 0]}\r\n          position={[0, -0.126, 0]}\r\n        />\r\n      </group>\r\n      </>\r\n    );\r\n\r\n    return <></>;\r\n  };\r\n\r\n  const addObject = () => {\r\n    const objectsCount = objects.length;\r\n\r\n    if (objectsCount < limitObjects) {\r\n      const hitPos = hitTestRef.current.position;\r\n      const clonedElement = cloneElement(\r\n        Obj(),\r\n        {\r\n          key: objectsCount,\r\n          position: [\r\n            hitPos.x + offset.x,\r\n            hitPos.y + offset.y,\r\n            hitPos.z + offset.z\r\n          ]\r\n        }\r\n      );\r\n      setObjects((prev) => [\r\n        ...prev,\r\n        clonedElement\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const onSelect = (event) => {\r\n    addObject();\r\n  };\r\n\r\n  const Events = () => {\r\n    useXREvent('select', onSelect);\r\n  };\r\n\r\n  const onSessionEnd = (event) => {\r\n    setObjects([]);\r\n  };\r\n\r\n  const objOnSelect = (event) => {\r\n    event.intersection.object.__r3f.handlers.onClick();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        className=\"AR-preview\"\r\n        gl={{\r\n          powerPreference: \"high-performance\",\r\n          alpha: true,\r\n          antialias: true,\r\n          stencil: false,\r\n          depth: true\r\n        }}\r\n      >\r\n        <AdaptiveDpr pixelated />\r\n        <XR\r\n          referenceSpace=\"local\"\r\n          onSessionEnd={onSessionEnd}\r\n        >\r\n          <Controllers />\r\n          {\r\n            objects.length < limitObjects\r\n            ? <HitTest />\r\n            : <></>\r\n          }\r\n          <ambientLight />\r\n          <directionalLight\r\n            intensity={2}\r\n            position={[0.75, 1, 0.5]}\r\n            color={0xffffff}\r\n          />\r\n          <directionalLight\r\n            intensity={2}\r\n            position={[-7.5, -10, -2]}\r\n            color={0xffffff}\r\n          />\r\n          {\r\n            objects.length < limitObjects\r\n            ? <>\r\n                {[...objects]}\r\n                <Events />\r\n              </>\r\n            : <Interactive onSelect={objOnSelect}>\r\n                {[...objects]}\r\n              </Interactive>\r\n          }\r\n        </XR>\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import { useState, useEffect } from \"react\";\r\nimport { ARButton } from '@react-three/xr';\r\n\r\nimport Scene3D from './Scene3D';\r\nimport AR from './AR';\r\n\r\nconst App = () => {\r\n  const [container, setContainer] = useState(null);\r\n  const [loadScene, setLoadScene] = useState(<Scene3D />);\r\n\r\n  useEffect(() => {\r\n    setContainer(document.getElementById(\"root\").getElementsByClassName(\"container\")[0]);\r\n  });\r\n\r\n  const XRStart = (event) => {\r\n    setLoadScene(<AR />);\r\n    container.classList.add(\"XR-mode\");\r\n  };\r\n\r\n  const XRStop = (event) => {\r\n    setLoadScene(<Scene3D />);\r\n    container.classList.remove(\"XR-mode\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ARButton className=\"AR-btn\">\r\n        {\r\n          (status) => status == \"unsupported\"\r\n          ? <div className=\"XR-start\">AR is unsupported</div>\r\n          : status == \"exited\"\r\n            ? <><div className=\"XR-start\" onClick={XRStart}>Try AR</div></>\r\n            : <><div className=\"XR-stop\" onClick={XRStop}>Exit</div></>\r\n        }\r\n      </ARButton>\r\n      {loadScene}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"],"names":["isMobile","width","window","innerWidth","getMostSideLength","innerHeight","CustomStats","title","num","isStats","showPanel","dom","style","left","count","classList","add","console","log","document","body","appendChild","Stats","elem","createElement","innerHTML","this","append","statsElems","getElementsByClassName","length","remove","useStats","stats","useMemo","useEffect","right","useFrame","begin","end","generated","_taskCache","WeakMap","DRACOLoader","manager","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","position","normal","color","uv","defaultAttributeTypes","path","config","url","onLoad","onProgress","onError","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","buffer","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","then","catch","callback","attribute","type","undefined","BYTES_PER_ELEMENT","name","worker","taskKey","JSON","stringify","has","cachedTask","get","key","promise","byteLength","Error","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","geometry","_releaseTask","set","geometryData","BufferGeometry","index","setIndex","BufferAttribute","array","i","attributes","itemSize","setAttribute","responseType","_initDecoder","useJS","WebAssembly","librariesPending","push","_loadLibrary","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","_taskLoad","onmessage","e","data","error","sort","a","b","map","terminate","Loader","decodeAttribute","draco","decoder","dracoGeometry","attributeName","attributeType","numComponents","num_components","numValues","num_points","dataType","Float32Array","DT_FLOAT32","Int8Array","DT_INT8","Int16Array","DT_INT16","Int32Array","DT_INT32","Uint8Array","DT_UINT8","Uint16Array","DT_UINT16","Uint32Array","DT_UINT32","getDracoDataType","ptr","_malloc","GetAttributeDataArrayForAllPoints","HEAPF32","slice","_free","onModuleLoaded","DracoDecoderModule","module","Decoder","decoderBuffer","DecoderBuffer","Init","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","error_msg","self","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","numFaces","num_faces","numIndices","GetTrianglesUInt32Array","decodeIndex","destroy","buffers","attr","MeshoptDecoder","detector","wasmpack","supported","instance","wasm","validate","instantiate","result","ch","charCodeAt","write","unpack","exports","__wasm_call_ctors","decode","fun","target","size","source","filter","sbrk","count4","tp","sp","heap","memory","res","subarray","filters","NONE","OCTAHEDRAL","QUATERNION","EXPONENTIAL","decoders","ATTRIBUTES","TRIANGLES","INDICES","ready","decodeVertexBuffer","meshopt_decodeVertexBuffer","decodeIndexBuffer","meshopt_decodeIndexBuffer","decodeIndexSequence","meshopt_decodeIndexSequence","decodeGltfBuffer","mode","dracoLoader","extensions","useDraco","useMeshopt","extendLoader","setDecoderPath","setDRACOLoader","setMeshoptDecoder","useGLTF","useMeshOpt","useLoader","GLTFLoader","preload","clear","input","modelPath","Robot","props","group","useRef","nodes","materials","clips","root","ref","React","Object3D","current","actualRef","AnimationMixer","mixer","lazyActions","actions","forEach","clip","Object","defineProperty","enumerable","clipAction","names","c","api","state","delta","update","currentRoot","values","action","uncacheAction","stopAllAction","useAnimations","animations","useState","anim","reset","fadeIn","setEffectiveTimeScale","play","fadeOut","dispose","rotation","Math","PI","object","root006","Heart","material","HeartMaterial","skeleton","BodyMaterial","onClick","head_1","HeadMaterial","lefteye_1","mouth","MouthMaterial","righteye_1","EyeMaterial","CameraController","useThree","camera","gl","controls","OrbitControls","domElement","minDistance","maxDistance","enablePan","enableDamping","dampingFactor","isMob","className","fov","near","far","powerPreference","alpha","antialias","stencil","depth","Preload","AdaptiveDpr","pixelated","intensity","scale","offset","objects","setObjects","hitTestRef","geometryHitTest","THREE","materialHitTest","HitTest","useHitTest","hit","decompose","addObject","objectsCount","hitPos","clonedElement","cloneElement","x","y","z","prev","onSelect","event","Events","useXREvent","XR","referenceSpace","onSessionEnd","Controllers","intersection","__r3f","handlers","container","setContainer","Scene3D","loadScene","setLoadScene","getElementById","XRStart","AR","XRStop","status"],"sourceRoot":""}